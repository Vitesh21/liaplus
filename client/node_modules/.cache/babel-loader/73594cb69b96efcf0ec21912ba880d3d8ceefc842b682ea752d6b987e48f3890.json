{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api';\n\n// Get all feedback with optional filtering and sorting\nexport const getAllFeedback = async (filters = {}) => {\n  try {\n    const {\n      category,\n      sortBy,\n      order\n    } = filters;\n    let queryParams = '';\n    if (category) {\n      queryParams += `category=${category}&`;\n    }\n    if (sortBy) {\n      queryParams += `sortBy=${sortBy}&order=${order || 'desc'}`;\n    }\n    const response = await axios.get(`${API_URL}/feedback?${queryParams}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching feedback:', error);\n    throw error;\n  }\n};\n\n// Submit new feedback\nexport const submitFeedback = async feedbackData => {\n  try {\n    const response = await axios.post(`${API_URL}/feedback`, feedbackData);\n    return response.data;\n  } catch (error) {\n    console.error('Error submitting feedback:', error);\n    throw error;\n  }\n};\n\n// Get feedback by ID\nexport const getFeedbackById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/feedback/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching feedback by ID:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getAllFeedback","filters","category","sortBy","order","queryParams","response","get","data","error","console","submitFeedback","feedbackData","post","getFeedbackById","id"],"sources":["C:/Users/91998/OneDrive/Desktop/zeotap/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = '/api';\n\n// Get all feedback with optional filtering and sorting\nexport const getAllFeedback = async (filters = {}) => {\n  try {\n    const { category, sortBy, order } = filters;\n    let queryParams = '';\n    \n    if (category) {\n      queryParams += `category=${category}&`;\n    }\n    \n    if (sortBy) {\n      queryParams += `sortBy=${sortBy}&order=${order || 'desc'}`;\n    }\n    \n    const response = await axios.get(`${API_URL}/feedback?${queryParams}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching feedback:', error);\n    throw error;\n  }\n};\n\n// Submit new feedback\nexport const submitFeedback = async (feedbackData) => {\n  try {\n    const response = await axios.post(`${API_URL}/feedback`, feedbackData);\n    return response.data;\n  } catch (error) {\n    console.error('Error submitting feedback:', error);\n    throw error;\n  }\n};\n\n// Get feedback by ID\nexport const getFeedbackById = async (id) => {\n  try {\n    const response = await axios.get(`${API_URL}/feedback/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching feedback by ID:', error);\n    throw error;\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,MAAM;;AAEtB;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;EACpD,IAAI;IACF,MAAM;MAAEC,QAAQ;MAAEC,MAAM;MAAEC;IAAM,CAAC,GAAGH,OAAO;IAC3C,IAAII,WAAW,GAAG,EAAE;IAEpB,IAAIH,QAAQ,EAAE;MACZG,WAAW,IAAI,YAAYH,QAAQ,GAAG;IACxC;IAEA,IAAIC,MAAM,EAAE;MACVE,WAAW,IAAI,UAAUF,MAAM,UAAUC,KAAK,IAAI,MAAM,EAAE;IAC5D;IAEA,MAAME,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,aAAaM,WAAW,EAAE,CAAC;IACtE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,cAAc,GAAG,MAAOC,YAAY,IAAK;EACpD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMR,KAAK,CAACe,IAAI,CAAC,GAAGd,OAAO,WAAW,EAAEa,YAAY,CAAC;IACtE,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,eAAe,GAAG,MAAOC,EAAE,IAAK;EAC3C,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,aAAagB,EAAE,EAAE,CAAC;IAC7D,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}